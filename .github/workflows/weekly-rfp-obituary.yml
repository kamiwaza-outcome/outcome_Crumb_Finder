name: Weekly RFP Obituary

on:
  schedule:
    # Every Friday at 5:00 PM Eastern Time
    # 21:00 UTC during EDT (March-November)
    # 22:00 UTC during EST (November-March)
    - cron: '0 21 * * 5'
  
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Run in test mode (print instead of sending)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      days_back:
        description: 'Days to look back for expired RFPs'
        required: false
        default: '7'

jobs:
  generate-obituary:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Decode Google credentials
      env:
        GOOGLE_CREDENTIALS_BASE64: ${{ secrets.GOOGLE_CREDENTIALS_BASE64 }}
      run: |
        echo "$GOOGLE_CREDENTIALS_BASE64" | base64 -d > /tmp/google-credentials.json
        echo "Google credentials decoded successfully"
    
    - name: Generate and Send Obituary
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GOOGLE_SHEETS_CREDS_PATH: /tmp/google-credentials.json
        SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
        MAYBE_SPREADSHEET_ID: ${{ secrets.MAYBE_SPREADSHEET_ID }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_OBITUARY_WEBHOOK_URL: ${{ secrets.SLACK_OBITUARY_WEBHOOK_URL }}
        TEST_MODE: ${{ github.event.inputs.test_mode || 'false' }}
        DAYS_BACK: ${{ github.event.inputs.days_back || '7' }}
      run: |
        echo "========================================="
        echo "ü™¶ Generating Weekly RFP Obituary"
        echo "========================================="
        echo "Time: $(date)"
        echo "Test Mode: $TEST_MODE"
        echo "Days Back: $DAYS_BACK"
        echo ""
        
        echo "üîç Testing webhook configuration..."
        python scripts/test_obituary_webhooks.py
        echo ""
        
        if [ "$TEST_MODE" = "true" ]; then
          echo "Running in TEST MODE - will not send to Slack"
          python scripts/rfp_obituary.py --test --days $DAYS_BACK
        else
          echo "Running in PRODUCTION MODE - will send to Slack"
          python scripts/rfp_obituary.py --days $DAYS_BACK
        fi
    
    - name: Upload logs as artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: obituary-logs
        path: |
          *.log
        retention-days: 7
    
    - name: Notify on failure
      if: failure()
      run: |
        echo "‚ùå Weekly obituary generation failed!"
        echo "Check the logs for details."
        # You could add a simple Slack notification here for failures